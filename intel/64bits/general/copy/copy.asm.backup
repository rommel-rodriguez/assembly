    section     .data
count   dq      0 
loopc   dq      0
    section     .text
    global      _start
_start:
    mov rax, 1
    mov rdi, 1
    mov qword [count], rsp ; Maybe replace count with r9 or something

    mov rcx, rsp ; Copy direction on the TOS to rcx
    lea rsi, [rcx] ; make buffer for write poin to it
    mov rdx, 1
    syscall
    xor r8, r8
while_loop:
    add rcx, 8 ; go to next string pointer
    lea rsi, [rcx]  ; Load address of first byte or argument
inner_loop:
    mov rax, 1 ; Prepare the system call
    mov rdi, 1 ; File descriptor
    mov rdx, 1 ; Number of bytes to print
    syscall
    ; mov r8, rsi
    ; add r8, 1
    add rsi, 1  ; go to the next byte
    cmp rsi, 0 ; ??? Doest rsi not hold a pointer right now?
    jnz inner_loop
finish_while:
    add rcx, 8
    ; mov rsi, [rcx]
    inc r8
    cmp r8, qword [count]
    jb while_loop ; end with null pointer
end_loop:
    xor rax, rax
    mov     rax, 60
    xor     rdi, rdi
    syscall
    

